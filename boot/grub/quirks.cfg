# WARNING! ACHTUNG!
# This file contains several quirks that are platform or hardware specific.
# Since the installer must be able to handle various hardware, these quirks
# have to be performed on the fly (i.e. not in the GRUB itself).

# Some devices might not have a fully functional GOP to be utilized by
# GRUB. SMBIOS device names in this list are known to have a broken
# GOP implementation, thus the gfxterm will not be enabled:
#
# - MacBook Pro 15" (Mid-2010, MacBookPro6,2).
#
# Entries in this list must be the exact string recorded in the System
# Product Name field (offset 05h of the structure type 02), except the
# null byte. Can be extracted by `dmidecode -s system-product-name'.
# WARNING: Do NOT add generic strings into this list, such as:
# - "System Product Name"
# - "To be filled by O.E.M."
# WARNING: Do NOT add strings contatining spaces! GRUB does not have
# the required functionality to allow spaces in the list of strings.
# If you do have to add model strings that contains spaces, please add
# them in the for loop like this:
# for model in $nogfxterm_list \
#     "Model 1" \
#     "Model 2" \
#     "Model 3" ; do
set nogfxterm_list="
	MacBookPro6,2
"

# Memory map information is not accurate on a few platforms. For now let's
# just lift the check for them.
# 1: GRUB does not detect the correct memory capacity on old-world
# LoongArch, lift this check temporarily until we fix this in GRUB.
# 2: Some firmwares on Loongson 3 only allocates 256MB memory to the EFI
# environment, thus renders the memory check useless (The initrd in the live
# media is too large to be loaded, the system won't boot anyway).
# Entries in this list must follow the format below:
#	$grub_cpu-$grub-platform
# For example:
#	x86_64-efi
set nomemchk_platforms="
	loongarch64-efi
	mips64el-efi
"

# One specific plaform doesn't have a proper OsIndications implementation.
# The "UEFI Firmware Settings" option won't work on this platform, and will
# cause the machine to freeze.
# Entries in this list must follow the format below:
#	$grub_cpu-$grub-platform
# For example:
#	x86_64-efi
set nofwsetup_platforms="
	mips64el-efi
"

# TODO add loongarch64 build of memtest86+
set nomemtest_cpus="
	mips64el
	arm64
	riscv64
	loongarch64
	powerpc
"

# The following platform(s) have some problem with the serial console.
# Since the serial does not have a "conntected" state, the serial console
# will be enabled if a serial port is detected (or reported by the
# firmware). Enabling serial console causes problem for GRUB on the
# following platrorms: the input may take seconds to respond, and certain
# inputs may not work, GRUB may appear unresponsive.
# We do not enable the serial console for these platforms, but leave the
# boot entry with serial console in the menu, in case of someone needs
# that option.
# Entries in this list must follow the format below:
#	$grub_cpu-$grub-platform
# For example:
#	x86_64-efi
set noserialchk_platforms="
	mips64el-efi
"

for platform in $nomemchk_platforms ; do
	if [ "x${grub_cpu}-${grub_platform}" = "x$platform" ] ; then
		set memcheck=0
		break
	fi
done

smbios --type 1 --get-string 5 --set system_model
for model in $nogfxterm_list ; do
	if [ "x$system_model" = "x$model" ]; then
		set isconsole=1
		break
	fi
done

for platform in $nofwsetup_platforms ; do
	if [ "x${grub_cpu}-${grub_platform}" = "x$platform" ] ; then
		set has_fwsetup=0
		break
	fi
done

for cpu in $nomemtest_cpus ; do
	if [ "x${has_fwsetup}" = "x0" ] ; then
		set noutils=1
	fi
done

for platform in $noserialchk_platforms ; do
	if [ "x${grub_cpu}-${grub_platform}" = "x$platform" ] ; then
		set detect_serial=0
		set show_serial=1
		break
	fi
done
