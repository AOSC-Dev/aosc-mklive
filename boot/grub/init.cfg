# GRUB menu initialization script
# This config file, or script, takes care of setting up the graphics terminal,
# setting respective values, performing quirks, etc. before entering the main
# menu.

# Load all necessary modules.
insmod part_gpt
insmod part_msdos
insmod all_video
insmod iso9660
insmod memsize
memsize -q

set retro=0
set la64_quirk=0
set pager=1
set timeout=30

# If this is set to console, we can not load the language select menu.
# VGA console and (most) EFI console can not display CJK characters!
# NOTE this must be updated if terminal_output is set.
set isconsole=0
# Flag to determine if the memory check must be performed.
set memcheck=1
# Flag to determine whether the "UEFI firmware settings" entry should
# be displayed in the menu.
set has_fwsetup=1
# Flag to enable the serial console detection.
# WARNING the serial console might cause problems. If your platform has
# unexpected behavior with the serial console enabled, add the platform
# to the quirks.cfg.
set detect_serial=1
# Flag to record if the serial console is deteted.
set has_serial=0
# Flag to determine if the menu entries with serial consle should be
# displayed.
set show_serial=0

# Performs the quirks check.
source /boot/grub/quirks.cfg

if [ "x$retro" = "x0" ] ; then
	set memreq=3072
	set gfxmode=1024x768
	set gfxpayload=keep
	insmod gfxterm
	if [ "x$detect_serial" = "x0" ] ; then
		echo "Skipping initializing the serial console."
		echo "Menu entries with serial console will be left enabled."
	elif [ "x$grub_platform" = "xefi" ] ; then
		# Prefer the serial reported by EFI.
		set serial=serial_efi0
		if ! terminal_output $serial ; then
			set serial=serial_com0
		fi
		# Restore the stdin/stdout.
		terminal_output console
		terminal_input console
	else
		set serial=serial_com0
	fi
	if [ "x$detect_serial" = "x0" ] ; then
		echo "Not detecting the serial console."
	elif terminal_output $serial ; then
		echo "Serial detected, using output $serial"
		set has_serial=1
	fi
	if [ "xhas_serial" = "x1" ] ; then
		terminal_input $serial
		# Assume the serial terminal supports UTF-8.
		terminfo -u $serial
		terminal_input --append console
		if [ "x$isconsole" = "x1" ] ; then
			terminal_output --append console
		else
			terminal_output --append gfxterm
		fi
		set show_serial=1
	else
		terminal_input console
		if [ "x$isconsole" = "x1" ] ; then
			terminal_output console
		else
			terminal_output gfxterm
		fi
	fi
	loadfont /boot/grub/fonts/unicode.pf2

	set nogui=0
	set nocli=0
	set menu_color_normal=white/black
	set menu_color_highlight=black/white
	set cli_title=$"Install AOSC OS (Command-line Only)"
	# UNDOCUMENTED: GRUB can load distro-specific translations (probably for their menus)
	# placed in the $secondary_locale_dir to enable internationalization in the menus.
	# NOTE: Console output usually lacks the ability to display non-ASCII characters.
	# Thus localization is totally disabled for them.
	set secondary_locale_dir=/boot/grub/locales-aosc
else
	set memreq=80
	set nogui=1
	set nocli=0
	terminal_input console
	terminal_output console
	set isconsole=1
	set menu_color_normal=white/black
	set menu_color_highlight=black/white
	set cli_title=$"Install AOSC OS"
fi

if [ "x$memcheck" = "x1" ] ; then
	if [ "$memsize" -lt "$memreq" ] ; then
		set lowmem=1
		if [ "x$retro" = "x1" ] ; then
			set nocli=1
		else
			set nogui=1
		fi
	fi
else
	set lowmem=0
fi
# Export necessary variables to global for later configfiles to be able to use them.
for var in memreq nogui nocli retro lowmem isconsole menu_color_normal menu_color_highlight pager timeout has_fwsetup show_serial ; do
	export $var
done

if [ "x$isconsole" = "x1" ] ; then
	# Using console output. Do not set any languages other than en_US.
	set lang=C
	set kernel_lang_param='LANG=C.UTF-8'
	export kernel_lang_param
	configfile /boot/grub/$tgt.cfg
else
	source /boot/grub/langsel.cfg
fi
